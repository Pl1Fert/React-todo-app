{"ast":null,"code":"import _objectSpread from\"/Users/pl1fert/Documents/GIt/React-todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/pl1fert/Documents/GIt/React-todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useState}from\"react\";import classes from\"./MyInput.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var MyInput=function MyInput(_ref){var create=_ref.create;var _useState=useState({content:\"\"}),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];var addNewNote=function addNewNote(){var newNote=_objectSpread(_objectSpread({},note),{},{id:Date.now(),status:\"active\"});create(newNote);setNote({content:\"\"});};return/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:note.content,className:classes.myInput,placeholder:\"Create a new todo...\",onChange:function onChange(e){return setNote(_objectSpread(_objectSpread({},note),{},{content:e.target.value}));},onKeyDown:function onKeyDown(e){if(e.key===\"Enter\"){addNewNote();}}});};export default MyInput;","map":{"version":3,"names":["React","useState","classes","MyInput","create","content","note","setNote","addNewNote","newNote","id","Date","now","status","myInput","e","target","value","key"],"sources":["/Users/pl1fert/Documents/GIt/React-todo-app/src/components/Input/MyInput.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport classes from \"./MyInput.module.css\";\n\nconst MyInput = ({ create }) => {\n    const [note, setNote] = useState({ content: \"\" });\n\n    const addNewNote = () => {\n        const newNote = {\n            ...note,\n            id: Date.now(),\n            status: \"active\"\n        };\n\n        create(newNote);\n        setNote({ content: \"\" });\n    };\n\n    return (\n        <input\n            type=\"text\"\n            value={note.content}\n            className={classes.myInput}\n            placeholder=\"Create a new todo...\"\n            onChange={(e) => setNote({ ...note, content: e.target.value })}\n            onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                    addNewNote();\n                }\n            }}\n        />\n    );\n};\n\nexport default MyInput;\n"],"mappings":"iQAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAOC,QAAO,KAAM,sBAAsB,CAAC,2CAE3C,GAAMC,QAAO,CAAG,QAAVA,QAAO,MAAmB,IAAbC,OAAM,MAANA,MAAM,CACrB,cAAwBH,QAAQ,CAAC,CAAEI,OAAO,CAAE,EAAG,CAAC,CAAC,wCAA1CC,IAAI,eAAEC,OAAO,eAEpB,GAAMC,WAAU,CAAG,QAAbA,WAAU,EAAS,CACrB,GAAMC,QAAO,gCACNH,IAAI,MACPI,EAAE,CAAEC,IAAI,CAACC,GAAG,EAAE,CACdC,MAAM,CAAE,QAAQ,EACnB,CAEDT,MAAM,CAACK,OAAO,CAAC,CACfF,OAAO,CAAC,CAAEF,OAAO,CAAE,EAAG,CAAC,CAAC,CAC5B,CAAC,CAED,mBACI,cACI,IAAI,CAAC,MAAM,CACX,KAAK,CAAEC,IAAI,CAACD,OAAQ,CACpB,SAAS,CAAEH,OAAO,CAACY,OAAQ,CAC3B,WAAW,CAAC,sBAAsB,CAClC,QAAQ,CAAE,kBAACC,CAAC,QAAKR,QAAO,gCAAMD,IAAI,MAAED,OAAO,CAAEU,CAAC,CAACC,MAAM,CAACC,KAAK,GAAG,EAAC,CAC/D,SAAS,CAAE,mBAACF,CAAC,CAAK,CACd,GAAIA,CAAC,CAACG,GAAG,GAAK,OAAO,CAAE,CACnBV,UAAU,EAAE,CAChB,CACJ,CAAE,EACJ,CAEV,CAAC,CAED,cAAeL,QAAO"},"metadata":{},"sourceType":"module"}