{"ast":null,"code":"var _jsxFileName = \"/Users/pl1fert/Documents/GIt/React-todo-app/src/components/NoteList/NoteList.jsx\";\nimport React from \"react\";\nimport classes from \"./NoteList.module.css\";\nimport NoteItem from \"../NoteItem/NoteItem\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteList = _ref => {\n  let {\n    notes,\n    remove,\n    changeNoteStatus,\n    mode,\n    query\n  } = _ref;\n  if (query === 'completed' || query === 'active') {\n    const newNotes = notes.filter(n => n.status === query);\n  } else {\n    const newNotes = notes;\n  }\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: classes.noteList,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.noteList,\n      ...provided.droppableProps,\n      ref: provided.innerRef,\n      children: [/*#__PURE__*/_jsxDEV(TransitionGroup, {\n        children: newNotes.map((note, index) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 400,\n          classNames: \"note\",\n          children: /*#__PURE__*/_jsxDEV(NoteItem, {\n            note: note,\n            remove: remove,\n            changeNoteStatus: changeNoteStatus,\n            mode: mode,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), !newNotes.length && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.noNotes__title,\n        children: \"No Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","classes","NoteItem","CSSTransition","TransitionGroup","Droppable","NoteList","notes","remove","changeNoteStatus","mode","query","newNotes","filter","n","status","noteList","provided","droppableProps","innerRef","map","note","index","id","length","noNotes__title","placeholder"],"sources":["/Users/pl1fert/Documents/GIt/React-todo-app/src/components/NoteList/NoteList.jsx"],"sourcesContent":["import React from \"react\";\nimport classes from \"./NoteList.module.css\";\nimport NoteItem from \"../NoteItem/NoteItem\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst NoteList = ({ notes, remove, changeNoteStatus, mode, query }) => {\n\n\n    if(query === 'completed' || query === 'active') {\n        const newNotes = notes.filter((n) => n.status === query);\n    } else {\n        const newNotes = notes;\n    }\n\n    return (\n        <Droppable droppableId={classes.noteList}>\n            {(provided) => (\n                <div\n                    className={classes.noteList}\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                >\n                    <TransitionGroup>\n                        {newNotes.map((note, index) => (\n                            <CSSTransition\n                                key={note.id}\n                                timeout={400}\n                                classNames=\"note\"\n                            >\n                                <NoteItem\n                                    note={note}\n                                    remove={remove}\n                                    changeNoteStatus={changeNoteStatus}\n                                    mode={mode}\n                                    index={index}\n                                />\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                    {!newNotes.length && (\n                        <h1 className={classes.noNotes__title}>No Notes</h1>\n                    )}\n                    {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n    );\n};\n\nexport default NoteList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,aAAa,EAAEC,eAAe,QAAQ,wBAAwB;AACvE,SAASC,SAAS,QAAQ,qBAAqB;AAAC;AAEhD,MAAMC,QAAQ,GAAG,QAAsD;EAAA,IAArD;IAAEC,KAAK;IAAEC,MAAM;IAAEC,gBAAgB;IAAEC,IAAI;IAAEC;EAAM,CAAC;EAG9D,IAAGA,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,QAAQ,EAAE;IAC5C,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKJ,KAAK,CAAC;EAC5D,CAAC,MAAM;IACH,MAAMC,QAAQ,GAAGL,KAAK;EAC1B;EAEA,oBACI,QAAC,SAAS;IAAC,WAAW,EAAEN,OAAO,CAACe,QAAS;IAAA,UACnCC,QAAQ,iBACN;MACI,SAAS,EAAEhB,OAAO,CAACe,QAAS;MAAA,GACxBC,QAAQ,CAACC,cAAc;MAC3B,GAAG,EAAED,QAAQ,CAACE,QAAS;MAAA,wBAEvB,QAAC,eAAe;QAAA,UACXP,QAAQ,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtB,QAAC,aAAa;UAEV,OAAO,EAAE,GAAI;UACb,UAAU,EAAC,MAAM;UAAA,uBAEjB,QAAC,QAAQ;YACL,IAAI,EAAED,IAAK;YACX,MAAM,EAAEb,MAAO;YACf,gBAAgB,EAAEC,gBAAiB;YACnC,IAAI,EAAEC,IAAK;YACX,KAAK,EAAEY;UAAM;YAAA;YAAA;YAAA;UAAA;QACf,GAVGD,IAAI,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAYnB;MAAC;QAAA;QAAA;QAAA;MAAA,QACY,EACjB,CAACX,QAAQ,CAACY,MAAM,iBACb;QAAI,SAAS,EAAEvB,OAAO,CAACwB,cAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QACzC,EACAR,QAAQ,CAACS,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA;EAE5B;IAAA;IAAA;IAAA;EAAA,QACO;AAEpB,CAAC;AAAC,KA1CIpB,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}