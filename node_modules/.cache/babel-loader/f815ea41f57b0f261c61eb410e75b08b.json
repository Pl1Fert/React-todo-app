{"ast":null,"code":"var _jsxFileName = \"/Users/pl1fert/Documents/GIt/React-todo-app/todo-app/src/components/Input/MyInput.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport classes from \"./MyInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyInput = _ref => {\n  _s();\n  let {\n    create\n  } = _ref;\n  const [note, setNote] = useState({\n    content: ''\n  });\n  const addNewNote = () => {\n    const newNote = {\n      ...note\n    };\n    create(newNote);\n    setNote({\n      content: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: note.content,\n    className: classes.myInput,\n    placeholder: \"Create a new todo...\",\n    onChange: e => setNote({\n      ...note,\n      content: e.target.value\n    }),\n    onKeyDown: e => {\n      if (e.keyCode == 13) {\n        addNewNote();\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(MyInput, \"GzBKdHSw7CuutJq9Fx5GyQCeonU=\");\n_c = MyInput;\nexport default MyInput;\nvar _c;\n$RefreshReg$(_c, \"MyInput\");","map":{"version":3,"names":["React","useState","classes","MyInput","create","note","setNote","content","addNewNote","newNote","myInput","e","target","value","keyCode"],"sources":["/Users/pl1fert/Documents/GIt/React-todo-app/todo-app/src/components/Input/MyInput.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport classes from \"./MyInput.module.css\";\n\nconst MyInput = ({create}) => {\n    const [note, setNote] = useState({content:''});\n\n    const addNewNote = () => {\n        const newNote = {\n            ...note\n        };\n\n        create(newNote);\n        setNote({content:''});\n    };\n\n    return (\n        <input \n            type=\"text\"\n            value={note.content}\n            className={classes.myInput} \n            placeholder=\"Create a new todo...\" \n            onChange={(e) => setNote({...note, content: e.target.value})}\n            onKeyDown={(e) => {\n                if(e.keyCode == 13) {\n                    addNewNote();\n                }\n            }}\n        />\n    );\n};\n\nexport default MyInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAAC;AAE3C,MAAMC,OAAO,GAAG,QAAc;EAAA;EAAA,IAAb;IAACC;EAAM,CAAC;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC;IAACM,OAAO,EAAC;EAAE,CAAC,CAAC;EAE9C,MAAMC,UAAU,GAAG,MAAM;IACrB,MAAMC,OAAO,GAAG;MACZ,GAAGJ;IACP,CAAC;IAEDD,MAAM,CAACK,OAAO,CAAC;IACfH,OAAO,CAAC;MAACC,OAAO,EAAC;IAAE,CAAC,CAAC;EACzB,CAAC;EAED,oBACI;IACI,IAAI,EAAC,MAAM;IACX,KAAK,EAAEF,IAAI,CAACE,OAAQ;IACpB,SAAS,EAAEL,OAAO,CAACQ,OAAQ;IAC3B,WAAW,EAAC,sBAAsB;IAClC,QAAQ,EAAGC,CAAC,IAAKL,OAAO,CAAC;MAAC,GAAGD,IAAI;MAAEE,OAAO,EAAEI,CAAC,CAACC,MAAM,CAACC;IAAK,CAAC,CAAE;IAC7D,SAAS,EAAGF,CAAC,IAAK;MACd,IAAGA,CAAC,CAACG,OAAO,IAAI,EAAE,EAAE;QAChBN,UAAU,EAAE;MAChB;IACJ;EAAE;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GA1BIL,OAAO;AAAA,KAAPA,OAAO;AA4Bb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}